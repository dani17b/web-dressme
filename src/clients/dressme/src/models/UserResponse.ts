/* tslint:disable */
/* eslint-disable */
/**
 * DressMe API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResponseConfiguration } from './UserResponseConfiguration';
import {
    UserResponseConfigurationFromJSON,
    UserResponseConfigurationFromJSONTyped,
    UserResponseConfigurationToJSON,
    UserResponseConfigurationToJSONTyped,
} from './UserResponseConfiguration';

/**
 * User response
 * @export
 * @interface UserResponse
 */
export interface UserResponse {
    /**
     * The user email
     * @type {string}
     * @memberof UserResponse
     */
    email: string;
    /**
     * The user name
     * @type {string}
     * @memberof UserResponse
     */
    name: string;
    /**
     * The user roles
     * @type {Array<string>}
     * @memberof UserResponse
     */
    roles: Array<string>;
    /**
     * 
     * @type {UserResponseConfiguration}
     * @memberof UserResponse
     */
    _configuration?: UserResponseConfiguration;
}

/**
 * Check if a given object implements the UserResponse interface.
 */
export function instanceOfUserResponse(value: object): value is UserResponse {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('roles' in value) || value['roles'] === undefined) return false;
    return true;
}

export function UserResponseFromJSON(json: any): UserResponse {
    return UserResponseFromJSONTyped(json, false);
}

export function UserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'name': json['name'],
        'roles': json['roles'],
        '_configuration': json['configuration'] == null ? undefined : UserResponseConfigurationFromJSON(json['configuration']),
    };
}

  export function UserResponseToJSON(json: any): UserResponse {
      return UserResponseToJSONTyped(json, false);
  }

  export function UserResponseToJSONTyped(value?: UserResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'name': value['name'],
        'roles': value['roles'],
        'configuration': UserResponseConfigurationToJSON(value['_configuration']),
    };
}

