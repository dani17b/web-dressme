/* tslint:disable */
/* eslint-disable */
/**
 * DressMe API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  QueryResponse,
} from '../models/index';
import {
    QueryResponseFromJSON,
    QueryResponseToJSON,
} from '../models/index';

export interface EvaluateQueryRequest {
    body: any | null;
}

/**
 * QueryApi - interface
 * 
 * @export
 * @interface QueryApiInterface
 */
export interface QueryApiInterface {
    /**
     * 
     * @param {any} body 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QueryApiInterface
     */
    evaluateQueryRaw(requestParameters: EvaluateQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryResponse>>;

    /**
     */
    evaluateQuery(requestParameters: EvaluateQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryResponse>;

}

/**
 * 
 */
export class QueryApi extends runtime.BaseAPI implements QueryApiInterface {

    /**
     */
    async evaluateQueryRaw(requestParameters: EvaluateQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<QueryResponse>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling evaluateQuery().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/query`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => QueryResponseFromJSON(jsonValue));
    }

    /**
     */
    async evaluateQuery(requestParameters: EvaluateQueryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<QueryResponse> {
        const response = await this.evaluateQueryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
